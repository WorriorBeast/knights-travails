(()=>{"use strict";const t=new class{constructor(){this.possibleMoves=[[1,2],[2,1],[-1,2],[-2,1],[-1,-2],[-2,-1],[1,-2],[2,-1]]}isWithinBoard(t,s){return t<8&&t>=0&&s<8&&s>=0}shortestPath(t,s){if(!this.isWithinBoard(t[0],t[1]))return-1;const o=[{start:t,path:[t],moves:0}],e=new Set;for(e.add(t.toString());o.length;){const{start:t,path:r,moves:h}=o.shift(),[i,n]=t;if(i===s[0]&&n===s[1])return`You made it in ${h} moves! Here's your path: ${r.map((t=>`[${t}]`))}`;for(let t=0;t<this.possibleMoves.length;t++){const s=i+this.possibleMoves[t][0],a=n+this.possibleMoves[t][1],l=[s,a];this.isWithinBoard(s,a)&&!e.has(l.toString())&&(o.push({start:l,path:[...r,l],moves:h+1}),e.add(l.toString()))}}return-1}};console.log(t.shortestPath([-2,0],[0,0])),console.log(t.shortestPath([0,0],[3,3])),console.log(t.shortestPath([3,3],[0,0])),console.log(t.shortestPath([0,0],[7,7]))})();
//# sourceMappingURL=main.a786b8d729b6a71e547f.js.map